getgenv().SecureMode = true
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua'))()

local Window = Rayfield:CreateWindow({
	Name = "GUN FIGHT ARENA SIMPLE-SCRIPT",
	LoadingTitle = "DOSv1",
	LoadingSubtitle = "by Sirius",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "Rayfield Interface Suite",
		FileName = "Big Hub"
	},
	KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
      Title = "DOSHUB SCRIPT",
      Subtitle = "Key System",
      Note = "The method of obtaining the key will provided soon..",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/Jg0r4KkD"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

--TABS
local EspTab = Window:CreateTab("VISUAL", 4483362458) -- Title, Image
local AimTab = Window:CreateTab("AIMS", 4483362458) -- Title, Image
local SetTab = Window:CreateTab("Settings", 4483362458) -- Title, Image

local Section = EspTab:CreateSection("Player")

-- GLOBAL
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

--AIMBOT FUNCTION
local AimbotEnabled = false  -- Initialize the variable
local AimbotActive = false
local LockedPlayer = nil
local Smoothness = 1  -- Adjust this value as needed
local TeamCheckEnabled = true
--FOV FUNCTION
local FOVCircleColor = Color3.fromRGB(25, 70, 200)
local FOV = 150
-- FOV Circle
local fovCircle = Drawing.new("Circle")
fovCircle.Thickness = 3
fovCircle.NumSides = 60
fovCircle.Transparency = 0.5
fovCircle.Color = FOVCircleColor
fovCircle.Radius = FOV / 2
fovCircle.Visible = true

-- HP HIGHLIGHT ESP FUNCTION
local HPBarEnabled = false
local HighlightEnabled = false
local ESPEnabled = false

-- Function to create HP bar
local function createHPBar(character)
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid or character:FindFirstChild("HPBar") or character == LocalPlayer.Character then return end


    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Name = "HPBar"
    billboardGui.Size = UDim2.new(0.2, 0, 4, 0)
    billboardGui.StudsOffset = Vector3.new(-3, 0, 0)
    billboardGui.AlwaysOnTop = true
    billboardGui.Parent = character

    local bgFrame = Instance.new("Frame")
    bgFrame.Size = UDim2.new(1, 0, 1, 0)
    bgFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    bgFrame.Parent = billboardGui

    local hpBar = Instance.new("Frame")
    hpBar.Size = UDim2.new(1, 0, 1, 0)
    hpBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    hpBar.Parent = bgFrame

    humanoid:GetPropertyChangedSignal("Health"):Connect(function()
        local healthPercentage = humanoid.Health / humanoid.MaxHealth
        hpBar.Size = UDim2.new(1, 0, healthPercentage, 0)
        hpBar.Position = UDim2.new(0, 0, 1 - healthPercentage, 0)
    end)
end

-- Function to highlight a player
local function highlightPlayer(player)
    if player == LocalPlayer then return end

    local character = player.Character or player.CharacterAdded:Wait()

    -- Remove existing highlight if it exists
    local existingHighlight = character:FindFirstChildOfClass("Highlight")
    if existingHighlight then existingHighlight:Destroy() end

    -- Create new highlight
    local highlight = Instance.new("Highlight")
    highlight.Parent = character
    highlight.FillTransparency = 1
    highlight.OutlineColor = (player.Team == LocalPlayer.Team) and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
end

-- Apply effects when a player is added
local function onPlayerAdded(player)
    player.CharacterAdded:Connect(function(character)
        if ESPEnabled then
            esp(player, character)
        end

        if HPBarEnabled then
            createHPBar(character)
        end

        if HighlightEnabled then
            highlightPlayer(player)
        end
    end)

    -- Apply functions to existing character if it exists
    if player.Character then
        if ESPEnabled then
            esp(player, player.Character)
        end

        if HPBarEnabled then
            createHPBar(player.Character)
        end

        if HighlightEnabled then
            highlightPlayer(player)
        end
    end
end

-- Connect to existing players
for _, player in pairs(Players:GetPlayers()) do
    onPlayerAdded(player)
end

-- Connect to new players
Players.PlayerAdded:Connect(onPlayerAdded)

-- PARA SA AIMBOT TOH
--
--
--
--
--
local Section = AimTab:CreateSection("aimb")

-- Function to get the closest player to the mouse pointer within the FOV circle
local function getClosestPlayerInFOV()
    local closestPlayer = nil
    local closestDistance = math.huge
    local mouseLocation = UserInputService:GetMouseLocation()

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local headPosition = player.Character.Head.Position
            local viewportPoint = Camera:WorldToViewportPoint(headPosition)
            local distanceFromMouse = (Vector2.new(viewportPoint.X, viewportPoint.Y) - Vector2.new(mouseLocation.X, mouseLocation.Y)).Magnitude

            -- Only consider players inside the FOV circle
            if distanceFromMouse < FOV / 2 and viewportPoint.Z > 0 then
                if distanceFromMouse < closestDistance then
                    closestDistance = distanceFromMouse
                    closestPlayer = player
                end
            end
        end
    end
    return closestPlayer
end

-- Update FOV Circle Position
RunService.RenderStepped:Connect(function()
    local mousePos = UserInputService:GetMouseLocation()
    fovCircle.Position = Vector2.new(mousePos.X, mousePos.Y)
end)


-- Aimbot functionality
local function aimAtPlayer(player)
    if player and player.Character and player.Character:FindFirstChild("Head") then
        -- Check if the player is on the same team (if TeamCheckEnabled is true)
        if TeamCheckEnabled and player.Team == LocalPlayer.Team then
            return  -- Don't aim at teammates
        end

        local headPosition = player.Character.Head.Position
        local cameraPosition = Camera.CFrame.Position
        local direction = (headPosition - cameraPosition).unit
        local newCFrame = CFrame.new(cameraPosition, cameraPosition + direction)
        Camera.CFrame = Camera.CFrame:Lerp(newCFrame, Smoothness)
    end
end


-- Key press handling
local mouseButton = Enum.UserInputType.MouseButton2

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == mouseButton and AimbotEnabled then
        AimbotActive = true  -- Enable aimbot when mouse button is held
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == mouseButton then
        AimbotActive = false  -- Disable aimbot when mouse button is released
        LockedPlayer = nil  -- Clear the locked player
    end
end)

-- Continuously update the aimbot and aim at the closest player
RunService.RenderStepped:Connect(function()
    if AimbotActive then
        LockedPlayer = getClosestPlayerInFOV()  -- Find the closest player to the mouse pointer within the FOV circle
        if LockedPlayer then
            aimAtPlayer(LockedPlayer)  -- Aim at the locked player
        end
    end
end)

RunService.RenderStepped:Connect(function()
    if AimbotActive and LockedPlayer then
        aimAtPlayer(LockedPlayer)
    end
end)

-- Connect to existing players
for _, player in pairs(Players:GetPlayers()) do
    onPlayerAdded(player)
end

-- Connect to new players
Players.PlayerAdded:Connect(onPlayerAdded)


local Toggle = EspTab:CreateToggle({
    Name = "HIGHLIGHT",
    CurrentValue = false,
    Flag = "HighlightEnabled", -- Unique flag for configuration saving
    Callback = function(Value)
        HighlightEnabled = Value  -- Use 'Value' instead of 'value'
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character then
                if HighlightEnabled then
                    highlightPlayer(player)
                else
                    local highlight = player.Character:FindFirstChildOfClass("Highlight")
                    if highlight then highlight:Destroy() end
                end
            end
        end
    end,  -- Removed the extra comma here
})  -- Ensure this closing parenthesis is here



local Toggle = EspTab:CreateToggle({
    Name = "HP BAR",  -- Fixed the quote here
    CurrentValue = false,
    Flag = "HPBarEnabled", -- Unique flag for configuration saving
    Callback = function(Value)
        HPBarEnabled = Value  -- Use 'Value' instead of 'value'
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character then
                if HPBarEnabled then
                    createHPBar(player.Character)
                else
                    local hpBar = player.Character:FindFirstChild("HPBar")
                    if hpBar then hpBar:Destroy() end
                end
            end
        end
    end,
})  -- Ensure this closing parenthesis is here

local Toggle = EspTab:CreateToggle({
    Name = "NAME&DISTANCE(SOON)",
    CurrentValue = false,
    Flag = "ESPEnabled", -- Unique flag for configuration saving
    Callback = function(value)
        ESPEnabled = value  -- Set the global ESPEnabled variable

        -- Hide or show existing ESP texts based on the toggle value
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character then
                local textLabel = player.Character:FindFirstChildOfClass("TextLabel")  -- Use TextLabel
                if textLabel then
                    textLabel.Visible = ESPEnabled  -- Set visibility based on the toggle value
                else
                    if ESPEnabled then
                        esp(player, player.Character)  -- Create ESP if enabled and text doesn't exist
                    end
                end
            end
        end
    end,
})

local Toggle = AimTab:CreateToggle({
    Name = "Aimbot",
    CurrentValue = false,
    Flag = "AimbotEnabled",
    Callback = function(value)
        AimbotEnabled = value
        if not AimbotEnabled then
            AimbotActive = false
            LockedPlayer = nil
        end
    end,
})

-- Slider to change FOV circle size
local Slider = AimTab:CreateSlider({
   Name = "FOV CIRCLE",
   Range = {0, 300}, -- Adjusted range for a more useful FOV size
   Increment = 2,
   Suffix = "SIZE",
   CurrentValue = FOV / 2, -- Start with the initial FOV radius
   Flag = "Slider1",
   Callback = function(Value)
       FOV = Value * 2 -- Since FOV is twice the radius, we multiply by 2
       fovCircle.Radius = FOV / 2
   end,
})

-- Color picker to change FOV circle color
local ColorPicker = AimTab:CreateColorPicker({
    Name = "Color FOV",
    Color = FOVCircleColor,
    Flag = "ColorPicker1",
    Callback = function(Value)
        fovCircle.Color = Value -- Update the FOV circle's color
    end
})

local Button = SetTab:CreateButton({
	Name = "Destroy UI",
	Callback = function()
		Rayfield:Destroy()  
	end,
})
Rayfield:LoadConfiguration()
